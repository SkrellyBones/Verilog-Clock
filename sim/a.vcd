$date
	Sat Mar 18 22:29:32 2023
$end
$version
	Icarus Verilog
$end
$timescale
	10ms
$end
$scope module clock2_tb $end
$var wire 7 ! seclow [6:0] $end
$var wire 7 " sechigh [6:0] $end
$var wire 7 # minlow [6:0] $end
$var wire 7 $ minhigh [6:0] $end
$var wire 7 % hourlow [6:0] $end
$var wire 7 & hourhigh [6:0] $end
$var reg 1 ' clk_r $end
$var reg 1 ( loadOrNah_r $end
$var reg 16 ) loading_r [15:0] $end
$scope module DUT $end
$var wire 4 * Lhourhigh [3:0] $end
$var wire 4 + Lhourlow [3:0] $end
$var wire 4 , Lminhigh [3:0] $end
$var wire 4 - Lminlow [3:0] $end
$var wire 1 ' clk_i $end
$var wire 1 ( loadOrNah $end
$var wire 1 . nLoaded_i $end
$var wire 1 / tc0a1 $end
$var wire 1 0 tc2a2 $end
$var wire 1 1 stage3_en_w $end
$var wire 1 2 stage2_en_w $end
$var wire 1 3 stage1_en_w $end
$var wire 7 4 seconds_o [6:0] $end
$var wire 7 5 seclowbcd [6:0] $end
$var wire 4 6 seclow [3:0] $end
$var wire 7 7 sechighbcd [6:0] $end
$var wire 4 8 sechigh [3:0] $end
$var wire 7 9 minutes_o [6:0] $end
$var wire 7 : minlowbcd [6:0] $end
$var wire 4 ; minlow [3:0] $end
$var wire 7 < minhighbcd [6:0] $end
$var wire 4 = minhigh [3:0] $end
$var wire 7 > managedhour [6:0] $end
$var wire 7 ? hrlowbcd [6:0] $end
$var wire 4 @ hrlow [3:0] $end
$var wire 7 A hrhighbcd [6:0] $end
$var wire 4 B hrhigh [3:0] $end
$var wire 7 C hours_o [6:0] $end
$var wire 7 D hex7needblank [6:0] $end
$var wire 7 E Lmin [6:0] $end
$var wire 1 F Lmanagedhour $end
$var wire 7 G Lhour [6:0] $end
$var parameter 1 H timey0 $end
$var parameter 1 I timey1 $end
$var parameter 32 J timey2 $end
$var parameter 32 K timey3 $end
$var parameter 32 L zeroz $end
$scope module Hbcd $end
$var wire 4 M bcd_high [3:0] $end
$var wire 4 N bcd_low [3:0] $end
$var wire 7 O bin_out [6:0] $end
$var wire 5 P bcd1 [4:0] $end
$var wire 5 Q bcd0 [4:0] $end
$upscope $end
$scope module Mbcd $end
$var wire 4 R bcd_high [3:0] $end
$var wire 4 S bcd_low [3:0] $end
$var wire 7 T bin_out [6:0] $end
$var wire 5 U bcd1 [4:0] $end
$var wire 5 V bcd0 [4:0] $end
$upscope $end
$scope module hr $end
$var wire 7 W bin_in [6:0] $end
$var wire 4 X bcd_low_out [3:0] $end
$var wire 4 Y bcd_high_out [3:0] $end
$upscope $end
$scope module mangerH $end
$var wire 7 Z binb4 [6:0] $end
$var wire 7 [ bin_fresh [6:0] $end
$var parameter 32 \ hrmax $end
$var parameter 32 ] zeroed $end
$upscope $end
$scope module mins $end
$var wire 7 ^ bin_in [6:0] $end
$var wire 4 _ bcd_low_out [3:0] $end
$var wire 4 ` bcd_high_out [3:0] $end
$upscope $end
$scope module sec $end
$var wire 7 a bin_in [6:0] $end
$var wire 4 b bcd_low_out [3:0] $end
$var wire 4 c bcd_high_out [3:0] $end
$upscope $end
$scope module seg5 $end
$var wire 4 d c_i [3:0] $end
$var wire 7 e disp_o [6:0] $end
$upscope $end
$scope module segs1 $end
$var wire 4 f c_i [3:0] $end
$var wire 7 g disp_o [6:0] $end
$upscope $end
$scope module segs2 $end
$var wire 4 h c_i [3:0] $end
$var wire 7 i disp_o [6:0] $end
$upscope $end
$scope module segs3 $end
$var wire 4 j c_i [3:0] $end
$var wire 7 k disp_o [6:0] $end
$upscope $end
$scope module segs4 $end
$var wire 4 l c_i [3:0] $end
$var wire 7 m disp_o [6:0] $end
$upscope $end
$scope module segs6 $end
$var wire 4 n c_i [3:0] $end
$var wire 7 o disp_o [6:0] $end
$upscope $end
$scope module stage0 $end
$var wire 1 ' clk_i $end
$var wire 1 p count_o $end
$var wire 1 q enable_i $end
$var wire 1 ( loadOrNah $end
$var wire 1 r nLoaded_i $end
$var wire 1 3 term_cnt_o $end
$var parameter 32 s cntr_bits_p $end
$var parameter 1 t cntr_tc_p $end
$var reg 1 u count_r $end
$upscope $end
$scope module stage1 $end
$var wire 1 ' clk_i $end
$var wire 1 v count_o $end
$var wire 1 3 enable_i $end
$var wire 1 ( loadOrNah $end
$var wire 1 w nLoaded_i $end
$var wire 1 2 term_cnt_o $end
$var parameter 32 x cntr_bits_p $end
$var parameter 1 y cntr_tc_p $end
$var reg 1 z count_r $end
$upscope $end
$scope module stage2 $end
$var wire 1 ' clk_i $end
$var wire 6 { count_o [5:0] $end
$var wire 1 / enable_i $end
$var wire 1 ( loadOrNah $end
$var wire 6 | nLoaded_i [5:0] $end
$var wire 1 1 term_cnt_o $end
$var parameter 32 } cntr_bits_p $end
$var parameter 32 ~ cntr_tc_p $end
$var reg 6 !" count_r [5:0] $end
$upscope $end
$scope module stage3 $end
$var wire 1 ' clk_i $end
$var wire 4 "" count_o [3:0] $end
$var wire 1 0 enable_i $end
$var wire 1 ( loadOrNah $end
$var wire 4 #" nLoaded_i [3:0] $end
$var wire 1 $" term_cnt_o $end
$var parameter 32 %" cntr_bits_p $end
$var parameter 32 &" cntr_tc_p $end
$var reg 4 '" count_r [3:0] $end
$upscope $end
$scope module zerah $end
$var wire 7 (" needblank [6:0] $end
$var wire 7 )" blanked [6:0] $end
$var parameter 1 *" blanktoggle $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
1*"
b1011 &"
b100 %"
b111011 ~
b110 }
1y
b1 x
1t
b1 s
b1 ]
b1011 \
b1 L
b1011 K
b111011 J
1I
1H
$end
#0
$dumpvars
b1111001 )"
b1111001 ("
b0 '"
0$"
b0 #"
b0 ""
b0 !"
b111011 |
b0 {
0z
0w
0v
1u
0r
1q
1p
b1000000 o
b0 n
b1000000 m
b0 l
b1000000 k
b0 j
b100100 i
b10 h
b1111001 g
b1 f
b1000000 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b1100 [
b0 Z
b1 Y
b10 X
b1100 W
b101 V
b1001 U
b111011 T
b1001 S
b101 R
b1 Q
b10 P
b1100 O
b10 N
b1 M
b1100 G
0F
b111011 E
b1111001 D
b0 C
b1 B
b1111001 A
b10 @
b100100 ?
b1100 >
b0 =
b1000000 <
b0 ;
b1000000 :
b0 9
b0 8
b1000000 7
b0 6
b1000000 5
b0 4
13
02
01
00
0/
z.
b1001 -
b101 ,
b10 +
b1 *
b1001001011001 )
1(
1'
b1111001 &
b100100 %
b1000000 $
b1000000 #
b1000000 "
b1000000 !
$end
#25
0(
0'
#50
b10010 $
b10010 <
b10010 k
b11000 #
b11000 :
b11000 m
b101 =
b101 `
b101 j
b1001 ;
b1001 _
b1001 l
03
11
b111011 9
b111011 ^
b111011 {
b111011 !"
0p
0u
1'
#75
0'
#100
1'
#125
0'
1(
#150
13
1p
1u
1'
#175
0'
#200
b1111001 !
b1111001 5
b1111001 o
03
12
b1 6
b1 b
b1 n
0p
0u
b1 4
b1 a
1v
1z
1'
#225
0'
#250
10
1/
13
1p
1u
1'
#275
0'
#300
b1111001 %
b1111001 ?
b1111001 i
b1111111 &
b1111111 A
b1111111 )"
b1000000 D
b1000000 g
b1000000 ("
b1 @
b1 X
b1 h
b0 B
b0 Y
b0 f
0/
b1000000 !
b1000000 5
b1000000 o
b1000000 $
b1000000 <
b1000000 k
b1000000 #
b1000000 :
b1000000 m
b1 >
b1 W
b1 [
03
02
b0 6
b0 b
b0 n
00
b0 =
b0 `
b0 j
b0 ;
b0 _
b0 l
0p
0u
b0 4
b0 a
0v
0z
01
b0 9
b0 ^
b0 {
b0 !"
b1 C
b1 Z
b1 ""
b1 '"
1'
#325
0'
#350
13
1p
1u
1'
#375
0'
#400
b1111001 !
b1111001 5
b1111001 o
03
12
b1 6
b1 b
b1 n
0p
0u
b1 4
b1 a
1v
1z
1'
#425
0'
#450
1/
13
1p
1u
1'
#475
0'
#500
0/
b1000000 !
b1000000 5
b1000000 o
b1111001 #
b1111001 :
b1111001 m
03
02
b0 6
b0 b
b0 n
b1 ;
b1 _
b1 l
0p
0u
b0 4
b0 a
0v
0z
b1 9
b1 ^
b1 {
b1 !"
1'
#525
0'
#550
13
1p
1u
1'
